---
- name: Check vault1 state
  uri:
    url: http://localhost:8200/v1/sys/health
    status_code: [200, 501, 503]
    return_content: true
  register: vault1_health

- name: Unseal if necessary
  when: vault1_health.status in [503]
  block:
    - name: Read vault init file
      ansible.builtin.slurp:
        src: "{{ vault_init_file }}"
      register: vault_init_content

    - name: Parse JSON content
      ansible.builtin.set_fact:
        vault_data: "{{ vault_init_content.content | b64decode | from_json }}"

    - name: Set root token and unseal keys as variables
      ansible.builtin.set_fact:
        root_token: "{{ vault_data.root_token }}"
        unseal_keys_b64: "{{ vault_data.unseal_keys_b64 }}"

    - name: Unseal vault1
      command: docker exec vault1 vault operator unseal {{ item }}
      loop:
        - "{{ unseal_keys_b64[0] }}"
        - "{{ unseal_keys_b64[1] }}"
        - "{{ unseal_keys_b64[2] }}"
      environment:
        VAULT_ADDR: http://vault1:8200

    - name: Join vault2 to the cluster
      command: docker exec vault2 vault operator raft join http://vault1:8200
      environment:
        VAULT_ADDR: http://vault2:8200

    - name: Unseal vault2
      command: docker exec vault2 vault operator unseal {{ item }}
      loop:
        - "{{ unseal_keys_b64[0] }}"
        - "{{ unseal_keys_b64[1] }}"
        - "{{ unseal_keys_b64[2] }}"
      environment:
        VAULT_ADDR: http://vault2:8200

    - name: Join vault3 to the cluster
      command: docker exec vault3 vault operator raft join http://vault1:8200
      environment:
        VAULT_ADDR: http://vault3:8200

    - name: Unseal vault3
      command: docker exec vault3 vault operator unseal {{ item }}
      loop:
        - "{{ unseal_keys_b64[0] }}"
        - "{{ unseal_keys_b64[1] }}"
        - "{{ unseal_keys_b64[2] }}"
      environment:
        VAULT_ADDR: http://vault3:8200

    - name: Assert vault1 is active with HTTP 200
      uri:
        url: http://localhost:8200/v1/sys/health
        status_code: 200
        return_content: yes
      register: vault1_active

    - name: Verify cluster status
      command: docker exec -e VAULT_TOKEN="{{ vault_init_json.root_token }}" -e VAULT_ADDR="http://vault1:8200" vault1 vault operator raft list-peers
      register: raft_peers
      changed_when: false

    - name: Display cluster status
      debug:
        msg: "{{ raft_peers.stdout_lines }}"
