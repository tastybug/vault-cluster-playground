---
- name: Check Leader State
  uri:
    url: http://localhost:8200/v1/sys/health
    status_code: [200, 501, 503]
    return_content: true
  register: leader_health
  when: inventory_hostname == leader_node

- name: Prepare Unsealing Data
  when: inventory_hostname == leader_node
  block:
    - name: Read vault init file
      ansible.builtin.slurp:
        src: "{{ vault_init_file }}"
      register: vault_init_content

    - name: Parse JSON content
      ansible.builtin.set_fact:
        vault_data: "{{ vault_init_content.content | b64decode | from_json }}"

    - name: Set root token and unseal keys as variables
      ansible.builtin.set_fact:
        root_token: "{{ vault_data.root_token }}"
        unseal_keys_b64: "{{ vault_data.unseal_keys_b64 }}"

- name: Unseal Leader
  command: "podman exec vault-node vault operator unseal {{ item }}"
  loop:
    - "{{ hostvars[leader_node].unseal_keys_b64[0] }}"
    - "{{ hostvars[leader_node].unseal_keys_b64[1] }}"
    - "{{ hostvars[leader_node].unseal_keys_b64[2] }}"
  environment:
    VAULT_ADDR: "http://{{ leader_node }}:8200"
  when: inventory_hostname == leader_node and hostvars[leader_node].leader_health.status in [503]

- name: Unseal+Join Followers
  when: inventory_hostname != leader_node and hostvars[leader_node].leader_health.status in [503]
  block:
    - name: Join node to the cluster
      command: podman exec vault-node vault operator raft join http://{{ leader_node }}:8200
      environment:
        VAULT_ADDR: "http://{{ inventory_hostname }}:8200"

    - name: Unseal node
      command: podman exec vault-node vault operator unseal {{ item }}
      loop:
        - "{{ hostvars[leader_node].unseal_keys_b64[0] }}"
        - "{{ hostvars[leader_node].unseal_keys_b64[1] }}"
        - "{{ hostvars[leader_node].unseal_keys_b64[2] }}"
      environment:
        VAULT_ADDR: "http://{{ inventory_hostname }}:8200"

- name: Cluster Readiness Check 
  when: inventory_hostname == leader_node
  block:
    - name: Assert Leader is ACTIVE with HTTP 200
      uri:
        url: http://localhost:8200/v1/sys/health
        status_code: 200
        return_content: yes
  
    - name: Verify cluster status
      command: podman exec -e VAULT_TOKEN="{{ vault_init_json.root_token }}" -e VAULT_ADDR="http://{{ leader_node }}:8200" vault-node vault operator raft list-peers
      register: raft_peers
      changed_when: false

    - name: Display cluster status
      debug:
        msg: "{{ raft_peers.stdout_lines }}"
